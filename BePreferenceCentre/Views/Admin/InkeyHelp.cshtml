@model BePreferenceCentre.ViewModels.InkeyViewModel
@{
    ViewBag.Title = "InkeyHelp";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Html.HiddenFor(m => m.InkeyJsonAnswers)
<div class="jumbotron" id="inkey-jumbo">
</div>

<div class="container inkey-container">
    <div class="row" id="inkey-row">

        <div class="input-group col=lg-12">
            <input type="text" class="form-control inkey-question" placeholder="ask us anything..." id="searchTextbox" />
            <div class="input-group-append">
                <input type="submit" class="btn btn-sm btn-info float-lg-right" value="Ask a Inkey Lister" id="ask-inkey" />
            </div>
        </div>



    </div>
    <div class="row" id="inkey-results-row">
        <div class="col-12">
            <div>
                <table id="inkey-results-table" class="table-borderless" cellpadding="20">
                    <tbody id="inkey-results"></tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="row" id="inkey-button">
        <a href="@Url.Action("InkeyAnswerForm", "Admin")" class="btn btn-primary">Inkey Question Form</a>
        <a href="@Url.Action("Download", "Admin")" id="savFile" class="btn btn-danger">Save File</a>
    </div>

</div>

<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
<script src="~/Scripts/FuzzSearch/fuse.js"></script>
<script type="text/javascript">

    var answers;

    var jsonFile = readTextFile("/Scripts/Json/inkey.json");
    var allText = "";
    function readTextFile(file) {
        var rawFile = new XMLHttpRequest();
        rawFile.open("GET", file, false);
        rawFile.onreadystatechange = function () {
            if (rawFile.readyState === 4) {
                if (rawFile.status === 200 || rawFile.status == 0) {
                    allText = rawFile.responseText;
                    console.log(allText);
                    answers = JSON.parse(allText);
                }
            }
        }
        rawFile.send(null);
    }


    var options = {
        shouldSort: true,
        tokenise: true,
        includeAllMatches: true,
        threshold: 0.3,
        distance: 100,
        maxPatternLength: 200,
        minMatchCharLength: 3,
        keys: ["Question"]
    }

    var f = new Fuse(answers, options);
    function DoSearch(srchValue) {
        $('#inkey-results').html("");
        var line = "";
        var i = 0;
        f.search(srchValue).forEach(function (item, index) {
            if (i > 2)
                return false;
            console.log("count : " + i);
            line += "<tr>";
            line += "<td>" + item.Answer + "</td>";
            line += "<td><img src='" + item.ProductImageLink + "' height='150' '/></td>";
            line += "</tr>";
            $('#inkey-results').html(line).addClass('fadeIn');
            i++;
        });
    };

    //$('#searchTextbox').keyup(function () {
    //    $('#inkey-results').html("");
    //    var line = "";
    //    f.search(this.value).forEach(function (item, index) {

    //        line += "<tr>";
    //        line += "<td>" + item.Answer + "</td>";
    //        line += "<td><img src='" + item.ProductImageLink + "' height='150' '/></td>";
    //        line += "</tr>";
    //        $('#inkey-results').html(line);
    //    });
    //});

    $('#ask-inkey').click(function () {
        $('#inkey-results').html("");
        DoSearch($('#searchTextbox').val());

    });

    $('#searchTextbox').keydown(function (e) {
        if (e.keyCode == 13) {
            $('#inkey-results').html("");
            DoSearch($('#searchTextbox').val());
        }
    })

</script>
